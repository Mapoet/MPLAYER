#ifndef __MPLAY_H__
#define __MPLAY_H__
#include<stdio.h>
#include<windows.h>
#include<time.h>
#include<mmsystem.h>
#pragma comment(lib,"winmm.lib") 
typedef struct _SOUNDDATA* SOUNDDATA;
typedef struct _SOUNDLINE* SOUNDLINE;
typedef struct _SOUNDINST* SOUNDINST;
typedef struct _SOUNDROAD* SOUNDROAD;
typedef SOUNDDATA		   SOUNDQUES;
struct _SOUNDDATA{
	UINT		SKEY;
	PVOID		DATA;
	SOUNDDATA	NEXT;
};
struct _SOUNDLINE{
	UINT NSOUND;
	INT*FREQS;
	INT*DURIS;
	INT*VOLUS;
};
struct _SOUNDINST{
	CHAR* NAME;
	enum{
		SOUNDINST_FREQ,
		SOUNDINST_FILE,
		SOUNDINST_DIST,
		SOUNDINST_FUNC
	}    TYPE;
	union {
		struct{ 
			CHAR* SFMT;
			enum{
				SOUNDINST_FILE_SINGLE,
				SOUNDINST_FILE_MULTIPLY
			}FTYPE;
			UINT	  NFREQ;
		}FSET;
		struct{
			UINT NFREQ;
			UINT*FREQS;
		}FREQ;
		INT(*FUNC)(INT);
	}    FREQ;
};
struct _SOUNDROAD{
	INT		  FREQ;
	SOUNDDATA LINES;
	SOUNDINST INSTR;
};

INT	  INSERTDATA(SOUNDDATA*, UINT, PVOID);
PVOID REMOVEDATA(SOUNDDATA*, UINT);
INT  TRAVELDATA(SOUNDDATA, PVOID(*)(PVOID));
INT  FREEDATA(SOUNDDATA, INT(*)(PVOID));

INT MALLOCSOUNDLINE(SOUNDLINE, INT, INT*, INT*, INT*);
INT FREESOUNDLINE(SOUNDLINE);
INT MALLOCSOUNDINST(SOUNDINST, CHAR*,INT, PVOID);
INT FREESOUNDINST(SOUNDINST);
INT MALLOCSOUNDROAD(SOUNDROAD, SOUNDINST, INT);
INT FREESOUNDROAD(SOUNDROAD);
INT PLAYSOUNDQUES(SOUNDQUES);
INT FREESOUNDQUES(SOUNDQUES);
//DWORD PLAYSOUNDROAD(LPVOID);
//INT SOUNDIND(SOUNDINST,INT,INT,INT);
#endif
